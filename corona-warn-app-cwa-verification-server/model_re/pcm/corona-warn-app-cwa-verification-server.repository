<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_MvIz2iNZEe-w0eUWRhGbkQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_Mu2f9CNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_Mu2f9yNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Mu2f9SNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8SNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Mu2f9iNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8yNZEe-w0eUWRhGbkQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MuMYpCNZEe-w0eUWRhGbkQ" describedService__SEFF="_MnxAgCNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MuMYoSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuMYoiNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuMYoiNZEe-w0eUWRhGbkQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_MuMYoSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuMYoyNZEe-w0eUWRhGbkQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MuMYoyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuMYoiNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MuLxoSNZEe-w0eUWRhGbkQ" describedService__SEFF="_MnvyYiNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MuJ8aiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuKjeyNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MuKjeyNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuJ8aiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuLxnyNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuKjciNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuKjdCNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuJ8ayNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuKjcCNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MuKjcCNZEe-w0eUWRhGbkQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_MuJ8ayNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuKjcSNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuKjcSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuKjcCNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuKjeCNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuKjeiNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuKjdSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuKjdiNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MuKjdiNZEe-w0eUWRhGbkQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_MuKjdSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuKjdyNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuKjdyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuKjdiNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MuLxnyNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuKjeyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuLxoCNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuLxnCNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuLxniNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuLKgCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuLxmiNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MuLxmiNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuLKgCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuLxmyNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuLxkiNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MuLxlCNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuLKgSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuLKgiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuLKgiNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_MuLKgSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuLxkCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuLxkCNZEe-w0eUWRhGbkQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_MuLKgiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuLxkSNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuLxkSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuLxkCNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuLxlyNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MuLxmSNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuLxlSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuLxliNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuLxliNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuLxlSNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuLxmyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuLxmiNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MuLxoCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuLxnyNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Mu8mnCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Mu8mmyNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8CNZEe-w0eUWRhGbkQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Mt6r0iNZEe-w0eUWRhGbkQ" describedService__SEFF="_MnvLUSNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MoNFYSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt6E0SNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt6E0SNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MoNFYSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt6r0CNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt6EziNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Mt6E0CNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MoO6kCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt6EzCNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt6EzCNZEe-w0eUWRhGbkQ" entityName="Switch Branch" predecessor_AbstractAction="_MoO6kCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt6EzSNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt5dsyNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_Mt6EwCNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MoPhoCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MtzXFSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MtzXFSNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MoPhoCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mtz-ICNZEe-w0eUWRhGbkQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MtzXEiNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_MtzXFCNZEe-w0eUWRhGbkQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MoQIsCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MtzXECNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MtzXECNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MoQIsCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MtzXESNZEe-w0eUWRhGbkQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MoQvwCNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MoRW0CNZEe-w0eUWRhGbkQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MoQIsSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MoQIsiNZEe-w0eUWRhGbkQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MoQIsiNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MoQIsSNZEe-w0eUWRhGbkQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MtzXESNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MtzXECNZEe-w0eUWRhGbkQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mtz-ICNZEe-w0eUWRhGbkQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_MtzXFSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt0lMCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt0lMCNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_Mtz-ICNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt5dsCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt5dsCNZEe-w0eUWRhGbkQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_Mt0lMCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt5dsSNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt5dsSNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_Mt5dsCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt5dsiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Mt5dsiNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt5dsSNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt6ExCNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_Mt6ExiNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Mt6EwSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt6EwiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt6EwiNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_Mt6EwSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt6EwyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Mt6EwyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt6EwiNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt6EySNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_Mt6EyyNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Mt6ExyNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt6EyCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Mt6EyCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt6ExyNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt6EzSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt6EzCNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt6r0CNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_Mt6E0SNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt6r0SNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Mt6r0SNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt6r0CNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Mu_C3iNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Mu_C3SNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8iNZEe-w0eUWRhGbkQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Mt_kVyNZEe-w0eUWRhGbkQ" describedService__SEFF="_MnukQCNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Mt6r1CNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt7S4CNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt7S4CNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_Mt6r1CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt7S4SNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt6r2CNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Mt6r2iNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Mt6r1SNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt6r1iNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt6r1iNZEe-w0eUWRhGbkQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_Mt6r1SNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt6r1yNZEe-w0eUWRhGbkQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt6r1yNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt6r1iNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt7S4SNZEe-w0eUWRhGbkQ" entityName="stopWatch.start()" predecessor_AbstractAction="_Mt7S4CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt_kVSNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt_kVSNZEe-w0eUWRhGbkQ" entityName="Switch Branch" predecessor_AbstractAction="_Mt7S4SNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt_kViNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt9vIiNZEe-w0eUWRhGbkQ">
          <branchBehaviour_BranchTransition id="_Mt9vJCNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Mt7S4iNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt7S4yNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt7S4yNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt7S4iNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt758CNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt758CNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Mt7S4yNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt758SNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt758SNZEe-w0eUWRhGbkQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_Mt758CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt758iNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt758iNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Mt758SNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt758yNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt758yNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_Mt758iNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IFyNZEe-w0eUWRhGbkQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt9IFyNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_Mt758yNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IGCNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt9IFCNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Mt9IFiNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Mt759CNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt8hACNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt8hACNZEe-w0eUWRhGbkQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_Mt759CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt8hASNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt8hASNZEe-w0eUWRhGbkQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_Mt8hACNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt8hAiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt8hAiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt8hASNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt8hAyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt8hAyNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Mt8hAiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IECNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt9IECNZEe-w0eUWRhGbkQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_Mt8hAyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IESNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt9IESNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Mt9IECNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IEiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt9IEiNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_Mt9IESNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9IEyNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Mt9IEyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt9IEiNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt9IGCNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt9IFyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9vICNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt9vICNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt9IGCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt9vISNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt9vISNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt9vICNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt-9SSNZEe-w0eUWRhGbkQ">
          <branchBehaviour_BranchTransition id="_Mt-9SyNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Mt9vJSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt-9RSNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt-9RSNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_Mt9vJSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-9RiNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt-9QiNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Mt-9RCNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Mt9vJiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt9vJyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt9vJyNZEe-w0eUWRhGbkQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_Mt9vJiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-WMCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-WMCNZEe-w0eUWRhGbkQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_Mt9vJyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-WMSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-WMSNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt-WMCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-WMiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-WMiNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Mt-WMSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-WMyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-WMyNZEe-w0eUWRhGbkQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_Mt-WMiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-WNCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-WNCNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Mt-WMyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-9QCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt-9QCNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_Mt-WNCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-9QSNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Mt-9QSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt-9QCNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-9RiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt-9RSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-9RyNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt-9RyNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt-9RiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt-9SCNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt-9SCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt-9RyNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt_kUiNZEe-w0eUWRhGbkQ">
          <branchBehaviour_BranchTransition id="_Mt_kVCNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Mt-9TCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt_kUCNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mt_kUCNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_Mt-9TCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt_kUSNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt_kUSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt_kUCNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Mt_kViNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt_kVSNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MvBfFyNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvBfFiNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Mu145yNZEe-w0eUWRhGbkQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MuJ8aCNZEe-w0eUWRhGbkQ" describedService__SEFF="_Mm9vQCNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MuFq9CNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuGSACNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MuGSACNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuFq9CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuGSASNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuFq-CNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuFq-iNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuFq9SNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuFq9iNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuFq9iNZEe-w0eUWRhGbkQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_MuFq9SNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFq9yNZEe-w0eUWRhGbkQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuFq9yNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuFq9iNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MuGSASNZEe-w0eUWRhGbkQ" entityName="stopWatch.start()" predecessor_AbstractAction="_MuGSACNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJ8ZiNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MuJ8ZiNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuGSASNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJ8ZyNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuJ8YyNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuJ8ZSNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuGSAiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuJ8YSNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MuJ8YSNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuGSAiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJ8YiNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuJVVSNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MuJ8YCNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuG5ECNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuIHOSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MuIHOSNZEe-w0eUWRhGbkQ" entityName="Switch Branch" predecessor_AbstractAction="_MuG5ECNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuIHOiNZEe-w0eUWRhGbkQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuHgJyNZEe-w0eUWRhGbkQ">
                      <branchBehaviour_BranchTransition id="_MuHgKSNZEe-w0eUWRhGbkQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MuG5ESNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuHgJCNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MuHgJCNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuG5ESNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuHgJSNZEe-w0eUWRhGbkQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuHgISNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MuHgIyNZEe-w0eUWRhGbkQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MuG5EiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuG5EyNZEe-w0eUWRhGbkQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_MuG5EyNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuG5EiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuHgICNZEe-w0eUWRhGbkQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MuHgICNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuG5EyNZEe-w0eUWRhGbkQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MuHgJSNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuHgJCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuHgJiNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MuHgJiNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuHgJSNZEe-w0eUWRhGbkQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuIHMCNZEe-w0eUWRhGbkQ">
                      <branchBehaviour_BranchTransition id="_MuIHMiNZEe-w0eUWRhGbkQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MuHgKiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuHgKyNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MuHgKyNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuHgKiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuHgLCNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MuHgLCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuHgKyNZEe-w0eUWRhGbkQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuIHNiNZEe-w0eUWRhGbkQ">
                      <branchBehaviour_BranchTransition id="_MuIHOCNZEe-w0eUWRhGbkQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MuIHMyNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuIHNCNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MuIHNCNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuIHMyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuIHNSNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MuIHNSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuIHNCNZEe-w0eUWRhGbkQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuIHOiNZEe-w0eUWRhGbkQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_MuIHOSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuIuQCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuIuQCNZEe-w0eUWRhGbkQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_MuIHOiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuIuQSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuIuQSNZEe-w0eUWRhGbkQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_MuIuQCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuIuQiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuIuQiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuIuQSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJVUCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuJVUCNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MuIuQiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJVUSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuJVUSNZEe-w0eUWRhGbkQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_MuJVUCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJVUiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuJVUiNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_MuJVUSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJVUyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuJVUyNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_MuJVUiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuJVVCNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuJVVCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuJVUyNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuJ8YiNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuJ8YSNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MuJ8ZyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuJ8ZiNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MvDUTiNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvDUTSNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Mu145iNZEe-w0eUWRhGbkQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MuFq8iNZEe-w0eUWRhGbkQ" describedService__SEFF="_MnwZcCNZEe-w0eUWRhGbkQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Mt_kWSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt_kYCNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Mt_kYCNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_Mt_kWSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuALYCNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mt_kXSNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Mt_kXyNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Mt_kWiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_Mt_kWyNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Mt_kWyNZEe-w0eUWRhGbkQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_Mt_kWiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_Mt_kXCNZEe-w0eUWRhGbkQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mt_kXCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_Mt_kWyNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MuALYCNZEe-w0eUWRhGbkQ" entityName="stopWatch.start()" predecessor_AbstractAction="_Mt_kYCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFD6yNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MuFD6yNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuALYCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFq8CNZEe-w0eUWRhGbkQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuFD6CNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MuFD6iNZEe-w0eUWRhGbkQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MuALYSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuFD5iNZEe-w0eUWRhGbkQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MuFD5iNZEe-w0eUWRhGbkQ" entityName="Switch Branch" predecessor_AbstractAction="_MuALYSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFD5yNZEe-w0eUWRhGbkQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuCnoiNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_MuCnpCNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuALYiNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuAycCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuAycCNZEe-w0eUWRhGbkQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_MuALYiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuAyfCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MuAyfCNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuAycCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuBZgCNZEe-w0eUWRhGbkQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuAyeSNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_MuAyeyNZEe-w0eUWRhGbkQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MuAycSNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuAydyNZEe-w0eUWRhGbkQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MuAydyNZEe-w0eUWRhGbkQ" entityName="If Branch" predecessor_AbstractAction="_MuAycSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuAyeCNZEe-w0eUWRhGbkQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuAydCNZEe-w0eUWRhGbkQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MuAydiNZEe-w0eUWRhGbkQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MuAyciNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuAycyNZEe-w0eUWRhGbkQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MuAycyNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuAyciNZEe-w0eUWRhGbkQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MuAyeCNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuAydyNZEe-w0eUWRhGbkQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuBZgCNZEe-w0eUWRhGbkQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_MuAyfCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuBZgSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuBZgSNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_MuBZgCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuBZgiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuBZgiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuBZgSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuBZgyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuBZgyNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MuBZgiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuBZhCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuBZhCNZEe-w0eUWRhGbkQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_MuBZgyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAkCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuCAkCNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_MuBZhCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAkSNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuCAkSNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_MuCAkCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAkiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuCAkiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuCAkSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAkyNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuCAkyNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MuCAkiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAlCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuCAlCNZEe-w0eUWRhGbkQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_MuCAkyNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCAlSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuCAlSNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_MuCAlCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCnoCNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuCnoCNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuCAlSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuCnoSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuCnoSNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuCnoCNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuEc0iNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_MuEc1CNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuDOsCNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuDOsSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuDOsSNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_MuDOsCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuDOsiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuDOsiNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuDOsSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuD1wCNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuD1wCNZEe-w0eUWRhGbkQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MuDOsiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuD1wSNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuD1wSNZEe-w0eUWRhGbkQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_MuD1wCNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuD1wiNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MuD1wiNZEe-w0eUWRhGbkQ" entityName="deferredResult" predecessor_AbstractAction="_MuD1wSNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuEc0CNZEe-w0eUWRhGbkQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuEc0CNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuD1wiNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuEc0SNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuEc0SNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuEc0CNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MuFD4yNZEe-w0eUWRhGbkQ">
                <branchBehaviour_BranchTransition id="_MuFD5SNZEe-w0eUWRhGbkQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MuFD4CNZEe-w0eUWRhGbkQ" entityName="Start Action" successor_AbstractAction="_MuFD4SNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MuFD4SNZEe-w0eUWRhGbkQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_MuFD4CNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFD4iNZEe-w0eUWRhGbkQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MuFD4iNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuFD4SNZEe-w0eUWRhGbkQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MuFD5yNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuFD5iNZEe-w0eUWRhGbkQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MuFq8CNZEe-w0eUWRhGbkQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_MuFD6yNZEe-w0eUWRhGbkQ" successor_AbstractAction="_MuFq8SNZEe-w0eUWRhGbkQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MuFq8SNZEe-w0eUWRhGbkQ" entityName="Stop Action" predecessor_AbstractAction="_MuFq8CNZEe-w0eUWRhGbkQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvHlsSNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_MvIz0CNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_Mu8mnCNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa5SNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_Mu8mmyNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvHlsCNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIz0CNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvHlsCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8CNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvHlsiNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_MvIz1CNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_Mu2f9CNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvHltCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_MvIz2CNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_Mu_C3iNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa4iNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_Mu_C3SNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvHlsyNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIz2CNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvHlsyNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8iNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvHltiNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_MvIMxCNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_MvDUTiNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa5CNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_MvDUTSNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvHltSNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIMxCNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvHltSNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Mu145iNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvIMwSNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_MvIz1iNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_Mu2f9yNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa4CNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_Mu2f9SNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvHltyNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIz1iNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa4SNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_Mu2f9iNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvIMwCNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIz1iNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvHltyNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8SNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvIMwCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Mu2f8yNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MvIMwyNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_MvIz0iNZEe-w0eUWRhGbkQ" encapsulatedComponent__AssemblyContext="_MvBfFyNZEe-w0eUWRhGbkQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MvJa4yNZEe-w0eUWRhGbkQ" innerProvidedRole_ProvidedDelegationConnector="_MvBfFiNZEe-w0eUWRhGbkQ" outerProvidedRole_ProvidedDelegationConnector="_MvIMwiNZEe-w0eUWRhGbkQ" assemblyContext_ProvidedDelegationConnector="_MvIz0iNZEe-w0eUWRhGbkQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MvIMwiNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Mu145yNZEe-w0eUWRhGbkQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu145iNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_MnwZcCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_Mm9IMCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_Mm76ECNZEe-w0eUWRhGbkQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu145yNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_Mm9vQCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_Mm9IMCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_Mm76ECNZEe-w0eUWRhGbkQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu2f8CNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_MnvLUSNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_MnvLUCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_Mm76ECNZEe-w0eUWRhGbkQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu2f8SNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_MnxAgCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_MnvLUCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_MnwZcyNZEe-w0eUWRhGbkQ" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu2f8iNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_MnukQCNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_Mm9IMCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_Mnt9MCNZEe-w0eUWRhGbkQ" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Mu2f8yNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_MnvyYiNZEe-w0eUWRhGbkQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_MnvLUCNZEe-w0eUWRhGbkQ">
      <parameters__OperationSignature dataType__Parameter="_MnvyYCNZEe-w0eUWRhGbkQ" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_MnvyYSNZEe-w0eUWRhGbkQ" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Mm76ECNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Mm9IMCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Mnt9MCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MnvLUCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MnvyYCNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MnvyYSNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MnwZcyNZEe-w0eUWRhGbkQ" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
