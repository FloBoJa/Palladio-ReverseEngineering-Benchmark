<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_cv1jOSNMEe-CX7SbLKBnZw">
  <components__Repository xsi:type="repository:BasicComponent" id="_cvkdeCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvkddyNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_cvkddCNMEe-CX7SbLKBnZw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cu02niNMEe-CX7SbLKBnZw" describedService__SEFF="_co5NsSNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cuyaWSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu02myNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cu02myNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuyaWSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu02nCNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu02mCNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu02miNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cuyaWiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu02liNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_cu02liNMEe-CX7SbLKBnZw" entityName="Switch Branch" predecessor_AbstractAction="_cuyaWiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu02lyNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu0PgyNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu0PhSNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cuzBYCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuzodSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_cuzodSNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuzBYCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuzodiNMEe-CX7SbLKBnZw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuzociNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_cuzodCNMEe-CX7SbLKBnZw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_cuzBYSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuzocCNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_cuzocCNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuzBYSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuzocSNMEe-CX7SbLKBnZw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuzBZCNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_cuzBZiNMEe-CX7SbLKBnZw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_cuzBYiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuzBYyNMEe-CX7SbLKBnZw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_cuzBYyNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuzBYiNMEe-CX7SbLKBnZw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_cuzocSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuzocCNMEe-CX7SbLKBnZw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuzodiNMEe-CX7SbLKBnZw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_cuzodSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuzodyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuzodyNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_cuzodiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu0PgCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu0PgCNMEe-CX7SbLKBnZw" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_cuzodyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu0PgSNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu0PgSNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_cu0PgCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu0PgiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu0PgiNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu0PgSNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu0PiSNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu02kCNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu0PhiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu0PhyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu0PhyNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_cu0PhiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu0PiCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu0PiCNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu0PhyNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu02kyNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu02lSNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu02kSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu02kiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu02kiNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu02kSNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu02lyNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu02liNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_cu02nCNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_cu02myNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu02nSNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cu02nSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu02nCNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_cvngyiNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_cvngzSNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvngyyNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_cvkdciNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvngzCNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_cvkddSNMEe-CX7SbLKBnZw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cu3S1CNMEe-CX7SbLKBnZw" describedService__SEFF="_co50wyNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cu3S0SNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu3S0iNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu3S0iNMEe-CX7SbLKBnZw" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_cu3S0SNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu3S0yNMEe-CX7SbLKBnZw">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cu3S0yNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu3S0iNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cu2r0SNMEe-CX7SbLKBnZw" describedService__SEFF="_coHxoCNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cu1doSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu2EtSNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cu2EtSNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu1doSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2rzyNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu1dpSNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu1dpyNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cu1doiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu1doyNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cu1doyNMEe-CX7SbLKBnZw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_cu1doiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu1dpCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu1dpCNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu1doyNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu2EsiNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu2EtCNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cu1dqCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu2EsCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cu2EsCNMEe-CX7SbLKBnZw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_cu1dqCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2EsSNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu2EsSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu2EsCNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cu2rzyNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu2EtSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2r0CNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu2rzCNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu2rziNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cu2EtiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu2ryiNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_cu2ryiNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu2EtiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2ryyNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu2rwiNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_cu2rxCNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu2EtyNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu2EuCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu2EuCNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_cu2EtyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2rwCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu2rwCNMEe-CX7SbLKBnZw" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_cu2EuCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu2rwSNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu2rwSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu2rwCNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu2rxyNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_cu2rySNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu2rxSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu2rxiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu2rxiNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu2rxSNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu2ryyNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu2ryiNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cu2r0CNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu2rzyNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_cvryPiNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvryPSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_cvkddiNMEe-CX7SbLKBnZw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cuuI6SNMEe-CX7SbLKBnZw" describedService__SEFF="_co7p8SNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cpdOYSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuffYCNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cuffYCNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cpdOYSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cugtgCNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cueRQCNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cue4UCNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cpfqoCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cudqMCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cudqMCNMEe-CX7SbLKBnZw" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_cpfqoCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cudqMSNMEe-CX7SbLKBnZw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cudqMSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cudqMCNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_cugtgCNMEe-CX7SbLKBnZw" entityName="stopWatch.start()" predecessor_AbstractAction="_cuffYCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuuI5yNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cuuI5yNMEe-CX7SbLKBnZw" entityName="Switch Branch" predecessor_AbstractAction="_cugtgCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuuI6CNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cursoiNMEe-CX7SbLKBnZw">
          <branchBehaviour_BranchTransition id="_cusTsCNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cujJwCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cukX4CNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cukX4CNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cujJwCNMEe-CX7SbLKBnZw" successor_AbstractAction="_culmACNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_culmACNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cukX4CNMEe-CX7SbLKBnZw" successor_AbstractAction="_cumNECNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cumNECNMEe-CX7SbLKBnZw" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_culmACNMEe-CX7SbLKBnZw" successor_AbstractAction="_cum0ICNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cum0ICNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_cumNECNMEe-CX7SbLKBnZw" successor_AbstractAction="_cunbMCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cunbMCNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cum0ICNMEe-CX7SbLKBnZw" successor_AbstractAction="_curFlSNMEe-CX7SbLKBnZw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_curFlSNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cunbMCNMEe-CX7SbLKBnZw" successor_AbstractAction="_curFliNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_curFkiNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_curFlCNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cuopUCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cup3cCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cup3cCNMEe-CX7SbLKBnZw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_cuopUCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cup3cSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cup3cSNMEe-CX7SbLKBnZw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_cup3cCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuqegCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuqegCNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cup3cSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuqegSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuqegSNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cuqegCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuqegiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuqegiNMEe-CX7SbLKBnZw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_cuqegSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuqegyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuqegyNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_cuqegiNMEe-CX7SbLKBnZw" successor_AbstractAction="_curFkCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_curFkCNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cuqegyNMEe-CX7SbLKBnZw" successor_AbstractAction="_curFkSNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_curFkSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_curFkCNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_curFliNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_curFlSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cursoCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cursoCNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_curFliNMEe-CX7SbLKBnZw" successor_AbstractAction="_cursoSNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cursoSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cursoCNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuth2SNMEe-CX7SbLKBnZw">
          <branchBehaviour_BranchTransition id="_cuuI4CNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cusTsSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuth1SNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_cuth1SNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cusTsSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuth1iNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuth0iNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_cuth1CNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cusTsiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cusTsyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cusTsyNMEe-CX7SbLKBnZw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_cusTsiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cus6wCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cus6wCNMEe-CX7SbLKBnZw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_cusTsyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cus6wSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cus6wSNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cus6wCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cus6wiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cus6wiNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cus6wSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cus6wyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cus6wyNMEe-CX7SbLKBnZw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_cus6wiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cus6xCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cus6xCNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_cus6wyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuth0CNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cuth0CNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cus6xCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuth0SNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cuth0SNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuth0CNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cuth1iNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuth1SNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuth1yNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cuth1yNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuth1iNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuth2CNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cuth2CNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuth1yNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuuI5CNMEe-CX7SbLKBnZw">
          <branchBehaviour_BranchTransition id="_cuuI5iNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cuuI4SNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuuI4iNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_cuuI4iNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuuI4SNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuuI4yNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cuuI4yNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuuI4iNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cuuI6CNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuuI5yNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_cvuOeSNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvuOeCNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_cvkdcSNMEe-CX7SbLKBnZw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cu8LXSNMEe-CX7SbLKBnZw" describedService__SEFF="_co7C4iNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cu3S1iNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu355SNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cu355SNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu3S1iNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu355iNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu354iNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu355CNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cu3S1yNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu354CNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu354CNMEe-CX7SbLKBnZw" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_cu3S1yNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu354SNMEe-CX7SbLKBnZw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu354SNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu354CNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_cu355iNMEe-CX7SbLKBnZw" entityName="stopWatch.start()" predecessor_AbstractAction="_cu355SNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu8LWiNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cu8LWiNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu355iNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu8LWyNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu8LVyNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cu8LWSNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cu355yNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu8LVSNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_cu8LVSNMEe-CX7SbLKBnZw" entityName="Switch Branch" predecessor_AbstractAction="_cu355yNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu8LViNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu6WJiNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu69MCNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu4g8CNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu4g8SNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu4g8SNMEe-CX7SbLKBnZw" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_cu4g8CNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5ICSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_cu5ICSNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu4g8SNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5ICiNMEe-CX7SbLKBnZw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu5IBiNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_cu5ICCNMEe-CX7SbLKBnZw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_cu4g8iNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu5IBCNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_cu5IBCNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cu4g8iNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5IBSNMEe-CX7SbLKBnZw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu5IASNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_cu5IAyNMEe-CX7SbLKBnZw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_cu4g8yNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu5IACNMEe-CX7SbLKBnZw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_cu5IACNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu4g8yNMEe-CX7SbLKBnZw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_cu5IBSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu5IBCNMEe-CX7SbLKBnZw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5ICiNMEe-CX7SbLKBnZw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_cu5ICSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5ICyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5ICyNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_cu5ICiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5vECNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5vECNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu5ICyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5vESNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5vESNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cu5vECNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5vEiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5vEiNMEe-CX7SbLKBnZw" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_cu5vESNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5vEyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu5vEyNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cu5vEiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu5vFCNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu5vFCNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_cu5vEyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WICNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu6WICNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu5vFCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WISNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu6WISNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cu6WICNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WIiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu6WIiNMEe-CX7SbLKBnZw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_cu6WISNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WIyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu6WIyNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cu6WIiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WJCNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu6WJCNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu6WIyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu6WJSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu6WJSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu6WJCNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu7kRCNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu7kRiNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu69MSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu69MiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu69MiNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_cu69MSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu69MyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu69MyNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu69MiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu69NCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu69NCNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cu69MyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu7kQCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu7kQCNMEe-CX7SbLKBnZw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_cu69NCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu7kQSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cu7kQSNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cu7kQCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu7kQiNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu7kQiNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu7kQSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu7kQyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu7kQyNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu7kQiNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cu8LUiNMEe-CX7SbLKBnZw">
                <branchBehaviour_BranchTransition id="_cu8LVCNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cu7kRyNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cu8LUCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cu8LUCNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cu7kRyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu8LUSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cu8LUSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu8LUCNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cu8LViNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu8LVSNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_cu8LWyNMEe-CX7SbLKBnZw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_cu8LWiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cu8LXCNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cu8LXCNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cu8LWyNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_cvwDriNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cvwDrSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_cvkdcyNMEe-CX7SbLKBnZw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_cuyaVyNMEe-CX7SbLKBnZw" describedService__SEFF="_co6b0yNMEe-CX7SbLKBnZw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_cuuI6yNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuuv9iNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cuuv9iNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuuI6yNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuuv9yNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuuv8yNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cuuv9SNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cuuv8CNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuuv8SNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cuuv8SNMEe-CX7SbLKBnZw" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_cuuv8CNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuuv8iNMEe-CX7SbLKBnZw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cuuv8iNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuuv8SNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_cuuv9yNMEe-CX7SbLKBnZw" entityName="stopWatch.start()" predecessor_AbstractAction="_cuuv9iNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuyaVSNMEe-CX7SbLKBnZw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_cuyaVSNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuuv9yNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuyaViNMEe-CX7SbLKBnZw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuyaUiNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_cuyaVCNMEe-CX7SbLKBnZw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_cuvXACNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuyaUCNMEe-CX7SbLKBnZw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_cuyaUCNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuvXACNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuyaUSNMEe-CX7SbLKBnZw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuxzRSNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_cuxzRyNMEe-CX7SbLKBnZw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_cuvXASNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuwlKyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_cuwlKyNMEe-CX7SbLKBnZw" entityName="Switch Branch" predecessor_AbstractAction="_cuvXASNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxMMCNMEe-CX7SbLKBnZw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuv-GSNMEe-CX7SbLKBnZw">
                      <branchBehaviour_BranchTransition id="_cuv-GyNMEe-CX7SbLKBnZw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_cuvXAiNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuv-FiNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_cuv-FiNMEe-CX7SbLKBnZw" entityName="If Branch" predecessor_AbstractAction="_cuvXAiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuv-FyNMEe-CX7SbLKBnZw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuv-EyNMEe-CX7SbLKBnZw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_cuv-FSNMEe-CX7SbLKBnZw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_cuv-ECNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuv-ESNMEe-CX7SbLKBnZw"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_cuv-ESNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuv-ECNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuv-EiNMEe-CX7SbLKBnZw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_cuv-EiNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuv-ESNMEe-CX7SbLKBnZw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_cuv-FyNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuv-FiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuv-GCNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_cuv-GCNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuv-FyNMEe-CX7SbLKBnZw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuwlIiNMEe-CX7SbLKBnZw">
                      <branchBehaviour_BranchTransition id="_cuwlJCNMEe-CX7SbLKBnZw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_cuv-HCNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuwlICNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_cuwlICNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuv-HCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuwlISNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_cuwlISNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuwlICNMEe-CX7SbLKBnZw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_cuwlKCNMEe-CX7SbLKBnZw">
                      <branchBehaviour_BranchTransition id="_cuwlKiNMEe-CX7SbLKBnZw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_cuwlJSNMEe-CX7SbLKBnZw" entityName="Start Action" successor_AbstractAction="_cuwlJiNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_cuwlJiNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuwlJSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuwlJyNMEe-CX7SbLKBnZw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_cuwlJyNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuwlJiNMEe-CX7SbLKBnZw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxMMCNMEe-CX7SbLKBnZw" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_cuwlKyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxMMSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxMMSNMEe-CX7SbLKBnZw" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_cuxMMCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxMMiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxMMiNMEe-CX7SbLKBnZw" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_cuxMMSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxMMyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxMMyNMEe-CX7SbLKBnZw" entityName="stopWatch.stop()" predecessor_AbstractAction="_cuxMMiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxzQCNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxzQCNMEe-CX7SbLKBnZw" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_cuxMMyNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxzQSNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxzQSNMEe-CX7SbLKBnZw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_cuxzQCNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxzQiNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_cuxzQiNMEe-CX7SbLKBnZw" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_cuxzQSNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxzQyNMEe-CX7SbLKBnZw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_cuxzQyNMEe-CX7SbLKBnZw" entityName="deferredResult" predecessor_AbstractAction="_cuxzQiNMEe-CX7SbLKBnZw" successor_AbstractAction="_cuxzRCNMEe-CX7SbLKBnZw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_cuxzRCNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuxzQyNMEe-CX7SbLKBnZw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_cuyaUSNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuyaUCNMEe-CX7SbLKBnZw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_cuyaViNMEe-CX7SbLKBnZw" entityName="Stop Action" predecessor_AbstractAction="_cuyaVSNMEe-CX7SbLKBnZw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VESNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_cv08IiNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvkdeCNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xUSNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvkddyNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VECNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv08IiNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VECNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_cvkddCNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VEiNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_cv1jMSNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvngyiNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VFCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_cv1jMyNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvryPiNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xUiNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvryPSNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VEyNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv1jMyNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VEyNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_cvkddiNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VFyNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_cv1jNyNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvngzSNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xUCNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvngyyNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VFiNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv1jNyNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xUyNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvngzCNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VFSNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv1jNyNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VFSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_cvkddSNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VFiNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_cvkdciNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VGSNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_cv08ICNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvuOeSNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xVSNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvuOeCNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VGCNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv08ICNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VGCNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_cvkdcSNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_cv0VGyNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_cv1jNSNMEe-CX7SbLKBnZw" encapsulatedComponent__AssemblyContext="_cvwDriNMEe-CX7SbLKBnZw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_cv2xVCNMEe-CX7SbLKBnZw" innerProvidedRole_ProvidedDelegationConnector="_cvwDrSNMEe-CX7SbLKBnZw" outerProvidedRole_ProvidedDelegationConnector="_cv0VGiNMEe-CX7SbLKBnZw" assemblyContext_ProvidedDelegationConnector="_cv1jNSNMEe-CX7SbLKBnZw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_cv0VGiNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_cvkdcyNMEe-CX7SbLKBnZw"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkdcSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_co7C4iNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_co6b0iNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_co5NsCNMEe-CX7SbLKBnZw" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkdciNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_co50wyNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_coHKkCNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_co50wiNMEe-CX7SbLKBnZw" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkdcyNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_co6b0yNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_co6b0iNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_co5NsCNMEe-CX7SbLKBnZw" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkddCNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_co5NsSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_coHKkCNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_co5NsCNMEe-CX7SbLKBnZw" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkddSNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_coHxoCNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_coHKkCNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_coF8cCNMEe-CX7SbLKBnZw" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_coGjgCNMEe-CX7SbLKBnZw" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_cvkddiNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_co7p8SNMEe-CX7SbLKBnZw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_co6b0iNMEe-CX7SbLKBnZw">
      <parameters__OperationSignature dataType__Parameter="_co7p8CNMEe-CX7SbLKBnZw" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_coF8cCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_coGjgCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_coHKkCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_co5NsCNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_co50wiNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_co6b0iNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_co7p8CNMEe-CX7SbLKBnZw" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
